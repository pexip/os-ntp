Description: fix denial of service via spoofed broadcast packet
Bug: http://support.ntp.org/bin/view/Main/NtpBug3042
Origin: vendor, http://pkgs.fedoraproject.org/cgit/rpms/ntp.git/tree/ntp-4.2.6p5-cve-2016-4956.patch

Index: ntp-4.2.6.p3+dfsg/ntpd/ntp_proto.c
===================================================================
--- ntp-4.2.6.p3+dfsg.orig/ntpd/ntp_proto.c	2016-10-05 08:20:14.876962563 -0400
+++ ntp-4.2.6.p3+dfsg/ntpd/ntp_proto.c	2016-10-05 08:20:14.872962527 -0400
@@ -1125,13 +1125,8 @@
 	 * interleaved broadcast. so restart the protocol.
 	 */
 	} else if (hismode == MODE_BROADCAST) {
-		if (!L_ISZERO(&p_org) && !(peer->flags & FLAG_XB)) {
-			peer->flags |= FLAG_XB;
-			peer->aorg = p_xmt;
-			peer->borg = rbufp->recv_time;
-			report_event(PEVNT_XLEAVE, peer, NULL);
-			return;
-		}
+		if (!L_ISZERO(&p_org) == !(peer->flags & FLAG_XB))
+			xleave_mismatch = 1;
 
 	/*
 	 * Check for bogus packet in basic mode. If found, check if it's not
@@ -1223,11 +1218,25 @@
 	/*
 	 * If the packet is bogus in basic mode but not in symmetric
 	 * interleaved mode and it passed the authentication check,
-	 * enable the mode and resynchronize.
+	 * enable the mode and resynchronize. Also, handle switch in the
+	 * broadcast interleaved mode.
 	 */
-	if (xleave_mismatch && hismode == MODE_ACTIVE) {
-		peer->flip = 1;
-		report_event(PEVNT_XLEAVE, peer, NULL);
+	if (xleave_mismatch) {
+		if (hismode == MODE_ACTIVE) {
+			peer->flip = 1;
+			report_event(PEVNT_XLEAVE, peer, NULL);
+		} else if (hismode == MODE_BROADCAST) {
+			if (!L_ISZERO(&p_org)) {
+				peer->flags |= FLAG_XB;
+				peer->aorg = p_xmt;
+				peer->borg = rbufp->recv_time;
+				report_event(PEVNT_XLEAVE, peer, NULL);
+			} else {
+				peer->flags &= ~FLAG_XB;
+				report_event(PEVNT_XERR, peer, NULL);
+			}
+			return;
+		}
 	}
 
 	/*
