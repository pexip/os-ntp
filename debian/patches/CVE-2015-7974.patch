Description: fix impersonation between authenticated peers
Origin: vendor, http://pkgs.fedoraproject.org/cgit/rpms/ntp.git/tree/ntp-4.2.6p5-cve-2015-7974.patch
Bug: http://support.ntp.org/bin/view/Main/NtpBug2936

Index: ntp-4.2.6.p3+dfsg/ntpd/ntp_proto.c
===================================================================
--- ntp-4.2.6.p3+dfsg.orig/ntpd/ntp_proto.c	2016-06-01 12:26:57.486893359 -0400
+++ ntp-4.2.6.p3+dfsg/ntpd/ntp_proto.c	2016-06-01 12:26:57.486893359 -0400
@@ -669,10 +669,13 @@
 		 * succeed in bloating the key cache. If an autokey,
 		 * purge it immediately, since we won't be needing it
 		 * again. If the packet is authentic, it can mobilize an
-		 * association. Note that there is no key zero.
+		 * association. If it's a persistent association using a
+		 * symmetric key, the key ID has to match the configured
+		 * value. Note that there is no key zero. 
 		 */
-		if (!authdecrypt(skeyid, (u_int32 *)pkt, authlen,
-		    has_mac))
+		if ((peer && !(peer->flags & FLAG_PREEMPT) &&
+		     peer->keyid <= NTP_MAXKEY && skeyid != peer->keyid) ||
+		    !authdecrypt(skeyid, (u_int32 *)pkt, authlen, has_mac))
 			is_authentic = AUTH_ERROR;
 		else
 			is_authentic = AUTH_OK;
